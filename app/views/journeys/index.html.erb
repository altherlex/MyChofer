
<!--<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&libraries=places"></script>-->
<!--<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&alternatives=true&region=BR"></script>-->

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&alternatives=true&region=BR&libraries=places"></script>


<style>body {background: none repeat scroll 0 0 transparent;}</style>

<section id="wrapper"><%=head_to_user_tag-%>

	<nav>

		<div class="padding">

			<%=section_menu_tag-%>

			<div class="content">

				<div class="journeys">

					<script>

						$(function(){ $("#accordion").accordion({header:"div.button"}); });

					</script>

					<div id='accordion' class="panel active" style="padding:0px">

						<div class="journeyRequest">

							<%= painel_corrida %>

						</div>

						<div class="journeysPanel">

							<%= painel_corridas_pendentes %>

						</div>

						<div class="journeysPanel">

							<%= painel_corridas_anteriores %>

						</div>

					</div>

				</div>

			</div>

		</div>		

	</nav>	

	<section id="content" style='margin-top:-24px;'>

		<div class="journeys">

			<div id="journey_map" style="margin-top:85px;height:805px; position: relative; background-color: rgb(229, 227, 223); overflow: hidden;">

				<article><p id="status">Carregando...</p></article>

				<script>

				//Resizable-Area do map

				$(function(){

					$('#journey_map').css({'height': ($(window).height()-61)+'px'});

					$(window).resize(function(){

						$('#journey_map').css({'height': ($(window).height()-61)+'px'});

					});

				});

				</script>

			</div>

		</div>

	</section>

</section>

<script>

/* 

*	Global Variables

*/

var map = new google.maps.Map(document.getElementById("journey_map"));

/* TODO: Marker com draggable true => é necessário atualizar o autocomplete ---> http://www.blogfodder.co.uk/2011/11/19/an-autocomplete-geocoding-google-map-with-draggable-marker */

var marker_motorista = new google.maps.Marker({ position: map.getCenter(), map: map, draggable: false });

var marker_start= new google.maps.Marker({ position: map.getCenter(), map: map, draggable: false });

var marker_end= new google.maps.Marker({ position: map.getCenter(), map: map, draggable: false });

var autocomplete_start = new google.maps.places.Autocomplete(document.getElementById('start_name'));	

var autocomplete_end = new google.maps.places.Autocomplete(document.getElementById('end_name'));	



$(document).ready(function(){

  //Carregando tips

	$('.tip_details').tooltip({'event_in':'click', 'event_out':'dblclick'});

	$('li.corrida').bind('click', function(){

		var ele = this;

		origem = ele.getAttribute('lat_lng_origem').split(',');

		destino = ele.getAttribute('lat_lng_destino').split(',');

		

		define_place(new google.maps.LatLng(origem[0], origem[1]), 'start');

		define_place(new google.maps.LatLng(destino[0], destino[1]), 'end');

	});

	/* Just test */

	$('#start_name').val('av rudge sao paulo');

	$('#end_name').val('rua do bosque barra funda');

	/* Print Map */

	var local_start = new google.maps.LatLng(-23.5505233, -46.63429819999999);

	var local_end = new google.maps.LatLng(-23.5505233, -46.63429819999999);



	var mapOptions = {

		center: local_start,

		zoom: 14,

		mapTypeId: google.maps.MapTypeId.ROADMAP,

		panControl:false,

		zoomControl:true,

		zoomControlOptions:{position:google.maps.ControlPosition.RIGHT_TOP},

		streetViewControl:true,

		streetViewControlOptions:{position:google.maps.ControlPosition.TOP_RIGHT}

	};

	map.setOptions(mapOptions);

	/* end print Map */

	var defaultBounds = new google.maps.LatLngBounds(local_start,local_end);

	var options = {bounds: defaultBounds,types: ['geocode','establishment']};



	autocomplete_start.setOptions(options);

	autocomplete_end.setOptions(options);

	autocomplete_start.bindTo('bounds', map);

	autocomplete_end.bindTo('bounds', map);

	google.maps.event.addListener(autocomplete_start, 'place_changed', function(){ 
		define_place(autocomplete_start.getPlace().geometry, 'start');
		carregar_lista_pacote(autocomplete_start.getPlace().geometry.location);

	});

	google.maps.event.addListener(autocomplete_end, 'place_changed', function(){ 

		define_place(autocomplete_end.getPlace().geometry, 'end');

	});

});



function carregar_lista_pacote( p_obj ) {

	params = "latitude=" + p_obj.lat() + "&longitude=" + p_obj.lng() + "&tpo_carro=" + $("#tpo_carro").val();

	$.getJSON('/journeys/carregar_pacotes/', params, function(data){

		$("#tpo_corrida").html(data.options);

		$("#cdg_area_atuacao").val(data.cdg_area_atuacao);

	});

}



function define_place(geometry_coordinate, pos){

	if (geometry_coordinate.viewport){

		map.fitBounds(geometry_coordinate.viewport);

	}else if (geometry_coordinate.location){

		map.setCenter(geometry_coordinate.location);

		map.setZoom(17);

	}else{

		if (geometry_coordinate.toUrlValue()=='NaN,NaN'){

			console.log('É necessário informar coordenada de origem e de destino.');

			return false

		}

		map.setCenter(geometry_coordinate);

		map.setZoom(17);

	}	

	var image = new google.maps.MarkerImage(

		'/assets/icons/journey_marker-'+pos+'.png', new google.maps.Size(94, 49),

		new google.maps.Point(0, 0), new google.maps.Point(18, 18));

	if (pos=='end'){

		marker_end.setIcon(image);

		if (geometry_coordinate.location)

			marker_end.setPosition(geometry_coordinate.location);

		else

			marker_end.setPosition(geometry_coordinate);

	}else if (pos=='start'){

		marker_start.setIcon(image);

		if (geometry_coordinate.location)

			marker_start.setPosition(geometry_coordinate.location);

		else

			marker_start.setPosition(geometry_coordinate);	

	}else{

		marker_motorista.setIcon(image);

		if (geometry_coordinate.location)

			marker_motorista.setPosition(geometry_coordinate.location);

		else

			marker_motorista.setPosition(geometry_coordinate);	

	}

};



/* Marca no mapa o local da lista poi escolhido */

function load_field_poi(p_this){

	el_field = $(p_this).attr('field_name');

	$('#'+el_field).val($(p_this).find('option:selected').attr('lat_lng'));

	lat = $('#'+el_field).val().split(',')[0];

	lng = $('#'+el_field).val().split(',')[1]

	coord = new google.maps.LatLng( lat, lng );

	define_place(coord, el_field.replace('_name', ''));

}

$('form').submit(function(){
	try{

		$('#journey_lat_lng_origem').val( marker_start.getPosition().toUrlValue() );

		$('#journey_lat_lng_destino').val( marker_end.getPosition().toUrlValue() );

	}catch(e){
		console.log('Informe a origem e o destino da corrida.');
	}



	return result_confirmar_corrida;

});

var result_confirmar_corrida;

function confirmar_corrida(objeto){

	objeto_confirma_corrida=objeto

	var recado=[];

	recado.push('Confirme seu pedido...');

	//Tipo do carro

	recado.push(objeto.dsc_tpo_carro);

	recado.push('Origem:'+objeto.start_name);

	recado.push('Destino:'+objeto.end_name);

	recado.push('Passageiro:'+objeto.end_name);

	str_data=objeto.date.day+'/'+objeto.date.month+'/'+objeto.date.year+' '+objeto.date.hour+':'+objeto.date.minute

	recado.push('Horário:'+str_data);

	recado.push('\n');

	recado.push('Distância:'+objeto.distance_em_metros_formatado);

	recado.push('Tempo estimado:'+objeto.duration_em_minutos_formatado);

	recado.push('\n');

	recado.push('Preço:'+objeto.vlr_estimado_formatado);

	recado.push('Cupom:'+objeto.vlr_cupom_formatado);

	result_confirmar_corrida=confirm(recado.join('\n'));
}

function show_datetime() {
	value = $('#ck_agenda').attr('checked');
	if(value == 'checked') {
		$("#start_journey").show();
		$("#div_time").show();		
		$("#div_real_time").hide();
	} else {
		$("#start_journey").hide();
		$("#div_time").hide();		
		$("#div_real_time").show();
	}
}

</script>